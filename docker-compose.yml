version: "3"

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.3
    command:
      # Enables the web UI
      - "--api.dashboard=true"
      - "--api.insecure=true"
      # Tells Traefik to listen to docker
      - "--providers.docker"
      # Set the EntryPoints
      - "--entryPoints.web.address=:80"
      # - "--entryPoints.websecure.address=:443"
      # - "--providers.docker.exposedByDefault=false"
    ports:
      # The HTTP port
      - "5000:80"
      # # The web UI port
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    # Dynamic Configuration
    labels:
      - "traefik.enable=true"

  mysql:
    image: mysql/mysql-server:5.7
    environment:
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: pokemon
    ports:
      - 3306:3306
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    restart: unless-stopped

  order:
    build:
      context: .
      dockerfile: ./module/order/Dockerfile
    depends_on:
      - mysql
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.order.entrypoints=web"
      - "traefik.http.routers.order.rule=PathPrefix(`/api/v1/order`)"
      - "traefik.http.services.order.loadbalancer.server.port=80"
      # - "traefik.http.routers.order.middlewares=order"
      # - "traefik.http.middlewares.order.stripprefix.prefixes=/"

  trade:
    build:
      context: .
      dockerfile: ./module/trade/Dockerfile
    depends_on:
      - mysql
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.trade.entrypoints=web"
      - "traefik.http.routers.trade.rule=PathPrefix(`/api/v1/trade`)"
      - "traefik.http.services.trade.loadbalancer.server.port=80"
      # - "traefik.http.routers.trade.middlewares=order"
      # - "traefik.http.middlewares.trade.stripprefix.prefixes=/"